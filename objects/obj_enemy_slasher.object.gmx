<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_slasher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize

event_inherited();

attacked_script = scr_attack_enemy_slasher;
state = STATE_IDLE;

spd = 0;
max_spd = 5;
frc = 1;
acc = 2;
push_spd = max_spd / 2;

attack_time = scr_seconds(1.5);
attack_max_spd = max_spd * 1.5;
prepare_attack_time = scr_seconds(0.25);
exhausted_time = scr_seconds(1);
canceled_by = noone; // for use with scr_attack_enemy_slasher

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to combat state

state = STATE_COMBAT;
direction = point_direction(x, y, obj_player.x, obj_player.y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start attacking

state = STATE_ATTACKING;
alarm[0] = attack_time;
sprite_index = spr_enemy_slasher_attacking;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop attacking

state = STATE_EXHAUSTED;
sprite_index = spr_enemy_slasher;
alarm[2] = exhausted_time;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set collision position

collx = -(sprite_width / 4);
colly = -(sprite_height / 4);
coll_size = sprite_width / 2;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///states

switch(state) {
case STATE_IDLE:
    if sees_player {
        state = STATE_COMBAT;
    }
    break;
    
case STATE_COMBAT:
    
    if !sees_player {
        state = STATE_INVESTIGATE;
        break;
    }

    direction -= angle_difference(direction, point_direction(x, y, obj_player.x, obj_player.y)) / 8;
    image_angle -= angle_difference(image_angle, direction) / 2;
    
    scr_enemy_slasher_walk(max_spd);

    // attack player
    if point_distance(obj_player.x, obj_player.y, x, y) &lt; 64 {
        state = STATE_PREPARE_ATTACK;
        alarm[1] = prepare_attack_time;
    }
    break;
    
case STATE_INVESTIGATE:

    if sees_player {
        state = STATE_COMBAT;
        break;
    }
    if !has_seen_plr {
        state = STATE_IDLE;
        break;
    }
    if point_distance(x, y, last_seen_x, last_seen_y) &lt; 32 {
        break;
    }
    
    direction -= angle_difference(direction, point_direction(x, y, last_seen_x, last_seen_y)) / 8;
    image_angle -= angle_difference(image_angle, direction) / 2;
    
    scr_enemy_slasher_walk(max_spd);
    break;
    
case STATE_PREPARE_ATTACK:
    
    direction -= angle_difference(direction, point_direction(x, y, obj_player.x, obj_player.y) + irandom_range(-45, 45)) / 8;
    image_angle = direction;
    break;
    
case STATE_ATTACKING:

    direction -= angle_difference(direction, point_direction(x, y, obj_player.x, obj_player.y)) / 16;
    image_angle = direction;
    
    scr_enemy_slasher_walk(attack_max_spd);
    break;
    
case STATE_EXHAUSTED:

    if !sees_player {
        break;
    }
    image_angle -= angle_difference(image_angle, point_direction(x, y, obj_player.x, obj_player.y)) / 16;
    break;
    
default:
    state = STATE_IDLE;
    show_debug_message("warning: obj_enemy_slasher has default state");
    break;
}

scr_move_around_solid(collx, colly, coll_size, lengthdir_x(spd, direction), lengthdir_y(spd, direction));
spd = clamp(spd - frc, 0, max_spd);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get hit by player and hit player

if point_distance(obj_player.x, obj_player.y, x, y) &lt; 16 {
    if state == STATE_ATTACKING {
        scr_hurt_player(1);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
