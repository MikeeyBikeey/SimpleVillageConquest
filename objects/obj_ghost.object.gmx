<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ghost</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize

text = "this is a bug";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///look at player

image_angle = point_direction(x, y, obj_player.x, obj_player.y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///appear as player gets closer

var plr_dist = point_distance(x, y, obj_player.x, obj_player.y);
if plr_dist &lt; 64 {
    if plr_dist &lt; 32 {
        image_alpha = 0.5;
    } else {
        image_alpha = 1 - plr_dist / 64;
    }
} else {
    image_alpha = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw text

var plr_dist = point_distance(x, y, obj_player.x, obj_player.y);
if plr_dist &lt; 64 {
    var txt_width = string_width(text);
    var txt_height = sprite_get_height(spr_font) * (string_count("#", text) + 1);
    var spr_width = sprite_get_width(spr_font) / 4;
    var spr_height = sprite_get_width(spr_font) / 4;
    var txt_x = x - txt_width / 2 - spr_width;
    var txt_y = y - txt_height - spr_height;
    
    if plr_dist &lt; 32 {
        draw_set_alpha(0.1);
    } else if plr_dist &lt; 64 {
        draw_set_alpha(0.1 * (1 - (plr_dist - 32) / 32));
    }
    
    draw_set_colour(make_colour_rgb(0, 0, 0));
    draw_rectangle(
        txt_x - spr_width,
        txt_y - spr_height,
        txt_x + txt_width + spr_width,
        txt_y + txt_height + spr_height,
        false);
        
    if plr_dist &lt; 32 {
        draw_set_alpha(1);
    } else if plr_dist &lt; 64 {
        draw_set_alpha(1 - (plr_dist - 32) / 32);
    }
        
    draw_set_colour(make_colour_rgb(255, 255, 255));
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_text(floor(txt_x), floor(txt_y), text);
    draw_set_alpha(1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
