<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_sword_swing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize

owner = noone;
radius = 16;
reach = 16;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move to owner

if owner == noone {
    exit;
}

x = owner.x;
y = owner.y;

direction = owner.image_angle;
image_angle = direction;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit enemy

with(obj_enemy_parent) {
    if point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle - 45),
        other.y + lengthdir_y(other.reach, other.image_angle - 45),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle),
        lengthdir_y(other.reach, other.image_angle),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle + 45),
        other.y + lengthdir_y(other.reach, other.image_angle + 45),
        x,
        y) &lt; other.radius + sprite_width
    {
        scr_attack(id, other.id);
    }
}

with(obj_arrow) {
    if point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle - 45),
        other.y + lengthdir_y(other.reach, other.image_angle - 45),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle),
        lengthdir_y(other.reach, other.image_angle),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle + 45),
        other.y + lengthdir_y(other.reach, other.image_angle + 45),
        x,
        y) &lt; other.radius + sprite_height
    {
        scr_attack(id, other.id);
    }
}

with(obj_boss) {
    if point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle - 45),
        other.y + lengthdir_y(other.reach, other.image_angle - 45),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle),
        lengthdir_y(other.reach, other.image_angle),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle + 45),
        other.y + lengthdir_y(other.reach, other.image_angle + 45),
        x,
        y) &lt; other.radius + sprite_width
    {
        scr_attack(id, other.id);
    }
}

with(obj_boss_lhand) {
    if point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle - 45),
        other.y + lengthdir_y(other.reach, other.image_angle - 45),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle),
        lengthdir_y(other.reach, other.image_angle),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle + 45),
        other.y + lengthdir_y(other.reach, other.image_angle + 45),
        x,
        y) &lt; other.radius + sprite_width
    {
        scr_attack(id, other.id);
    }
}

with(obj_boss_rhand) {
    if point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle - 45),
        other.y + lengthdir_y(other.reach, other.image_angle - 45),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle),
        lengthdir_y(other.reach, other.image_angle),
        x,
        y) &lt; other.radius + sprite_width
        || point_distance(
        other.x + lengthdir_x(other.reach, other.image_angle + 45),
        other.y + lengthdir_y(other.reach, other.image_angle + 45),
        x,
        y) &lt; other.radius + sprite_width
    {
        scr_attack(id, other.id);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug draw collision

/*
draw_circle(
    x + lengthdir_x(other.reach, other.image_angle - 45),
    y + lengthdir_y(other.reach, other.image_angle - 45),
    radius,
    true);
    
draw_circle(
    x + lengthdir_x(other.reach, other.image_angle),
    y + lengthdir_y(other.reach, other.image_angle),
    radius,
    true);
    
draw_circle(
    x + lengthdir_x(other.reach, other.image_angle + 45),
    y + lengthdir_y(other.reach, other.image_angle + 45),
    radius,
    true);*/
        

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
